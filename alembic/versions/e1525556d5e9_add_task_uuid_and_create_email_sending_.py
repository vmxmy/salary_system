"""add_task_uuid_and_create_email_sending_tasks

Revision ID: e1525556d5e9
Revises: b886a3391bbd # Updated based on directory listing
Create Date: <timestamp> # Alembic will manage the create date

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # For UUID and JSONB types

# revision identifiers, used by Alembic.
revision = 'e1525556d5e9'
down_revision = 'b886a3391bbd' # Updated based on directory listing
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Add task_uuid to email_logs table
    op.add_column('email_logs', sa.Column('task_uuid', postgresql.UUID(as_uuid=True), nullable=True), schema='core')
    op.create_index('ix_core_email_logs_task_uuid', 'email_logs', ['task_uuid'], unique=False, schema='core')

    # 2. Create email_sending_tasks table
    op.create_table('email_sending_tasks',
        sa.Column('task_uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('pay_period', sa.String(length=50), nullable=False),
        sa.Column('email_config_id', sa.Integer(), nullable=False),
        sa.Column('filters_applied', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('subject_template', sa.Text(), nullable=True),
        sa.Column('requested_by_user_id', sa.Integer(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False, server_default='queued'),
        sa.Column('total_employees_matched', sa.Integer(), nullable=True, server_default=sa.text('0')),
        sa.Column('total_sent_successfully', sa.Integer(), nullable=True, server_default=sa.text('0')),
        sa.Column('total_failed', sa.Integer(), nullable=True, server_default=sa.text('0')),
        sa.Column('total_skipped', sa.Integer(), nullable=True, server_default=sa.text('0')),
        sa.Column('started_at', sa.TIMESTAMP(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column('last_error_message', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('task_uuid', name=op.f('pk_email_sending_tasks')),
        sa.ForeignKeyConstraint(['email_config_id'], ['core.email_server_configs.id'], name=op.f('fk_email_sending_tasks_email_config_id_email_server_configs')),
        sa.ForeignKeyConstraint(['requested_by_user_id'], ['core.users.id'], name=op.f('fk_email_sending_tasks_requested_by_user_id_users')),
        schema='core'
    )
    op.create_index('ix_core_email_sending_tasks_status', 'email_sending_tasks', ['status'], unique=False, schema='core')
    op.create_index('ix_core_email_sending_tasks_pay_period', 'email_sending_tasks', ['pay_period'], unique=False, schema='core')
    op.create_index('ix_core_email_sending_tasks_requested_by_user_id', 'email_sending_tasks', ['requested_by_user_id'], unique=False, schema='core')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop email_sending_tasks table and its indexes
    op.drop_index('ix_core_email_sending_tasks_requested_by_user_id', table_name='email_sending_tasks', schema='core')
    op.drop_index('ix_core_email_sending_tasks_pay_period', table_name='email_sending_tasks', schema='core')
    op.drop_index('ix_core_email_sending_tasks_status', table_name='email_sending_tasks', schema='core')
    op.drop_table('email_sending_tasks', schema='core')

    # Drop task_uuid column and its index from email_logs table
    op.drop_index('ix_core_email_logs_task_uuid', table_name='email_logs', schema='core')
    op.drop_column('email_logs', 'task_uuid', schema='core')
    
    # ### end Alembic commands ###
