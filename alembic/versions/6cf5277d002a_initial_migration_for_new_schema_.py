"""Initial migration for new schema (versions dir cleared)

Revision ID: 6cf5277d002a
Revises: 
Create Date: 2025-04-22 10:49:21.994788

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6cf5277d002a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('salary_field_definitions',
    sa.Column('field_code', sa.Text(), nullable=False),
    sa.Column('field_name', sa.Text(), nullable=False),
    sa.Column('applicable_to', sa.Text(), nullable=True),
    sa.Column('is_common', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('is_calculated', sa.Boolean(), server_default='false', nullable=True),
    sa.PrimaryKeyConstraint('field_code', name=op.f('pk_salary_field_definitions'))
    )
    op.create_table('staff_info',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('id_number', sa.Text(), nullable=False),
    sa.Column('start_work_date', sa.Date(), nullable=True),
    sa.Column('payee_account_number', sa.Text(), nullable=True),
    sa.Column('payee_bank_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('staff_id', name=op.f('pk_staff_info')),
    sa.UniqueConstraint('id_number', name=op.f('uq_staff_info_id_number'))
    )
    op.create_index('ix_staff_info_id_number', 'staff_info', ['id_number'], unique=False)
    op.create_table('field_name_mapping',
    sa.Column('field_code', sa.Text(), nullable=False),
    sa.Column('chinese_name', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['field_code'], ['salary_field_definitions.field_code'], name='fk_field_name_mapping_field_code_salary_field_definitions'),
    sa.PrimaryKeyConstraint('field_code', name=op.f('pk_field_name_mapping'))
    )
    op.create_table('staff_monthly_attributes',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('effective_month', sa.Date(), nullable=False),
    sa.Column('person_code', sa.Text(), nullable=True),
    sa.Column('compile_category', sa.Text(), nullable=True),
    sa.Column('position_type', sa.Text(), nullable=True),
    sa.Column('salary_level', sa.Text(), nullable=True),
    sa.Column('identity_label', sa.Text(), nullable=True),
    sa.Column('annual_leave_entitled', sa.Numeric(), server_default='0', nullable=True),
    sa.Column('annual_leave_taken', sa.Numeric(), server_default='0', nullable=True),
    sa.Column('annual_leave_remaining', sa.Numeric(), server_default='0', nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_info.staff_id'], name='fk_staff_monthly_attributes_staff_id_staff_info'),
    sa.PrimaryKeyConstraint('staff_id', 'effective_month', name=op.f('pk_staff_monthly_attributes'))
    )
    op.drop_table('view_level1_calculations')
    op.drop_table('dim_establishment_types')
    op.drop_table('dim_departments')
    op.drop_table('salary_field_mappings')
    op.drop_table('dim_units')
    op.drop_constraint('fk_employees_establishment_type_id', 'employees', type_='foreignkey')
    op.drop_column('employees', 'establishment_type_id')
    op.add_column('raw_salary_data_staging', sa.Column('_staging_id', sa.Integer(), autoincrement=True, nullable=False))
    op.add_column('raw_salary_data_staging', sa.Column('_import_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('raw_salary_data_staging', 'id_card_number',
               existing_type=sa.NUMERIC(precision=38, scale=9),
               type_=sa.String(length=18),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'employee_name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'employee_unique_id',
               existing_type=sa.NUMERIC(precision=38, scale=9),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'establishment_type_name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'pay_period_identifier',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('raw_salary_data_staging', '_airbyte_source_file',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', '_airbyte_source_sheet',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_index('raw_salary_data_staging_airbyte_tmp__airbyte_extracted_at_idx', table_name='raw_salary_data_staging')
    op.drop_index('raw_salary_data_staging_airbyte_tmp__airbyte_raw_id_idx', table_name='raw_salary_data_staging')
    op.create_index(op.f('ix_raw_salary_data_staging_employee_unique_id'), 'raw_salary_data_staging', ['employee_unique_id'], unique=False)
    op.create_index(op.f('ix_raw_salary_data_staging_id_card_number'), 'raw_salary_data_staging', ['id_card_number'], unique=False)
    op.create_index(op.f('ix_raw_salary_data_staging_pay_period_identifier'), 'raw_salary_data_staging', ['pay_period_identifier'], unique=False)
    op.drop_column('raw_salary_data_staging', 'deduct_self_medical_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_monthly_basic_performance')
    op.drop_column('raw_salary_data_staging', 'contrib_employer_pension_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_other_allowance')
    op.drop_column('raw_salary_data_staging', 'deduct_self_pension_contribution')
    op.drop_column('raw_salary_data_staging', 'contrib_employer_critical_illness_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_total_backpay_amount')
    op.drop_column('raw_salary_data_staging', 'salary_basic_performance_bonus_deduction')
    op.drop_column('raw_salary_data_staging', '_airbyte_generation_id')
    op.drop_column('raw_salary_data_staging', 'deduct_tax_adjustment')
    op.drop_column('raw_salary_data_staging', 'salary_monthly_reward_performance')
    op.drop_column('raw_salary_data_staging', 'salary_quarterly_performance_bonus')
    op.drop_column('raw_salary_data_staging', 'salary_salary_step')
    op.drop_column('raw_salary_data_staging', 'contrib_employer_medical_contribution')
    op.drop_column('raw_salary_data_staging', 'job_attr_salary_level')
    op.drop_column('raw_salary_data_staging', 'job_attr_personnel_rank')
    op.drop_column('raw_salary_data_staging', 'salary_one_time_deduction')
    op.drop_column('raw_salary_data_staging', 'deduct_self_unemployment_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_total_deduction_adjustment')
    op.drop_column('raw_salary_data_staging', 'salary_reform_1993_reserved_subsidy')
    op.drop_column('raw_salary_data_staging', 'contrib_employer_housing_fund_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_post_salary')
    op.drop_column('raw_salary_data_staging', 'salary_subsidy')
    op.drop_column('raw_salary_data_staging', '_airbyte_raw_id')
    op.drop_column('raw_salary_data_staging', 'job_attr_ref_official_post_salary_level')
    op.drop_column('raw_salary_data_staging', 'salary_basic_performance_bonus')
    op.drop_column('raw_salary_data_staging', 'salary_post_position_allowance')
    op.drop_column('raw_salary_data_staging', 'salary_position_or_technical_salary')
    op.drop_column('raw_salary_data_staging', 'job_attr_personnel_identity')
    op.drop_column('raw_salary_data_staging', 'job_attr_annual_fixed_salary_amount')
    op.drop_column('raw_salary_data_staging', '_airbyte_extracted_at')
    op.drop_column('raw_salary_data_staging', 'deduct_housing_fund_adjustment')
    op.drop_column('raw_salary_data_staging', 'job_attr_post_category')
    op.drop_column('raw_salary_data_staging', 'salary_basic_salary')
    op.drop_column('raw_salary_data_staging', 'salary_transportation_allowance')
    op.drop_column('raw_salary_data_staging', 'job_attr_ref_official_salary_step')
    op.drop_column('raw_salary_data_staging', 'salary_petition_worker_post_allowance')
    op.drop_column('raw_salary_data_staging', 'deduct_individual_income_tax')
    op.drop_column('raw_salary_data_staging', 'salary_living_allowance')
    op.drop_column('raw_salary_data_staging', '_airbyte_meta')
    op.drop_column('raw_salary_data_staging', 'deduct_self_housing_fund_contribution')
    op.drop_column('raw_salary_data_staging', 'deduct_self_annuity_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_reward_performance_deduction')
    op.drop_column('raw_salary_data_staging', 'salary_performance_salary')
    op.drop_column('raw_salary_data_staging', 'salary_only_child_parents_reward')
    op.drop_column('raw_salary_data_staging', 'deduct_social_insurance_adjustment')
    op.drop_column('raw_salary_data_staging', 'salary_allowance')
    op.drop_column('raw_salary_data_staging', 'job_attr_salary_grade')
    op.drop_column('raw_salary_data_staging', 'contrib_employer_annuity_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_salary_step_backpay_total')
    op.drop_column('raw_salary_data_staging', 'salary_civil_servant_normative_allowance')
    op.drop_column('raw_salary_data_staging', 'other_remarks')
    op.drop_column('raw_salary_data_staging', 'salary_salary_backpay')
    op.drop_column('raw_salary_data_staging', 'deduct_other_deductions')
    op.drop_column('raw_salary_data_staging', 'contrib_employer_unemployment_contribution')
    op.drop_column('raw_salary_data_staging', 'salary_rank_or_post_grade_salary')
    op.drop_column('raw_salary_data_staging', 'salary_petition_post_allowance')
    op.drop_column('raw_salary_data_staging', 'salary_probation_salary')
    op.drop_constraint('roles_name_key', 'roles', type_='unique')
    op.create_unique_constraint(op.f('uq_roles_name'), 'roles', ['name'])
    op.add_column('salary_records', sa.Column('record_id', sa.Integer(), nullable=False))
    op.add_column('salary_records', sa.Column('staff_id', sa.Integer(), nullable=False))
    op.add_column('salary_records', sa.Column('salary_month', sa.Date(), nullable=False))
    op.add_column('salary_records', sa.Column('field_code', sa.Text(), nullable=False))
    op.add_column('salary_records', sa.Column('amount', sa.Numeric(), nullable=True))
    op.create_index(op.f('ix_salary_records_field_code'), 'salary_records', ['field_code'], unique=False)
    op.create_index(op.f('ix_salary_records_salary_month'), 'salary_records', ['salary_month'], unique=False)
    op.create_index(op.f('ix_salary_records_staff_id'), 'salary_records', ['staff_id'], unique=False)
    op.create_index('ix_salary_records_staff_month', 'salary_records', ['staff_id', 'salary_month'], unique=False)
    op.create_unique_constraint('uq_salary_record_staff_month_field', 'salary_records', ['staff_id', 'salary_month', 'field_code'])
    op.create_foreign_key('fk_salary_records_staff_id_staff_info', 'salary_records', 'staff_info', ['staff_id'], ['staff_id'])
    op.create_foreign_key('fk_salary_records_field_code_salary_field_definitions', 'salary_records', 'salary_field_definitions', ['field_code'], ['field_code'])
    op.drop_column('salary_records', 'job_attributes')
    op.drop_column('salary_records', 'pay_period_identifier')
    op.drop_column('salary_records', 'establishment_type_id')
    op.drop_column('salary_records', 'other_remarks')
    op.drop_column('salary_records', 'created_at')
    op.drop_column('salary_records', 'salary_components')
    op.drop_column('salary_records', 'updated_at')
    op.drop_column('salary_records', 'employee_id')
    op.drop_column('salary_records', 'personal_deductions')
    op.drop_column('salary_records', 'company_contributions')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.drop_index('ix_users_email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.add_column('salary_records', sa.Column('company_contributions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('personal_deductions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('employee_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('salary_components', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('other_remarks', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('establishment_type_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('pay_period_identifier', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('salary_records', sa.Column('job_attributes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint('fk_salary_records_field_code_salary_field_definitions', 'salary_records', type_='foreignkey')
    op.drop_constraint('fk_salary_records_staff_id_staff_info', 'salary_records', type_='foreignkey')
    op.drop_constraint('uq_salary_record_staff_month_field', 'salary_records', type_='unique')
    op.drop_index('ix_salary_records_staff_month', table_name='salary_records')
    op.drop_index(op.f('ix_salary_records_staff_id'), table_name='salary_records')
    op.drop_index(op.f('ix_salary_records_salary_month'), table_name='salary_records')
    op.drop_index(op.f('ix_salary_records_field_code'), table_name='salary_records')
    op.drop_column('salary_records', 'amount')
    op.drop_column('salary_records', 'field_code')
    op.drop_column('salary_records', 'salary_month')
    op.drop_column('salary_records', 'staff_id')
    op.drop_column('salary_records', 'record_id')
    op.drop_constraint(op.f('uq_roles_name'), 'roles', type_='unique')
    op.create_unique_constraint('roles_name_key', 'roles', ['name'])
    op.add_column('raw_salary_data_staging', sa.Column('salary_probation_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_petition_post_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_rank_or_post_grade_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('contrib_employer_unemployment_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_other_deductions', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_salary_backpay', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('other_remarks', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_civil_servant_normative_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_salary_step_backpay_total', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('contrib_employer_annuity_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_salary_grade', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_social_insurance_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_only_child_parents_reward', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_performance_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_reward_performance_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_self_annuity_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_self_housing_fund_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('_airbyte_meta', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('raw_salary_data_staging', sa.Column('salary_living_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_individual_income_tax', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_petition_worker_post_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_ref_official_salary_step', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_transportation_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_basic_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_post_category', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_housing_fund_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('_airbyte_extracted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_annual_fixed_salary_amount', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_personnel_identity', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_position_or_technical_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_post_position_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_basic_performance_bonus', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_ref_official_post_salary_level', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('_airbyte_raw_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
    op.add_column('raw_salary_data_staging', sa.Column('salary_subsidy', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_post_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('contrib_employer_housing_fund_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_reform_1993_reserved_subsidy', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_total_deduction_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_self_unemployment_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_one_time_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_personnel_rank', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('job_attr_salary_level', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('contrib_employer_medical_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_salary_step', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_quarterly_performance_bonus', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_monthly_reward_performance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_tax_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('_airbyte_generation_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_basic_performance_bonus_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_total_backpay_amount', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('contrib_employer_critical_illness_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_self_pension_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_other_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('contrib_employer_pension_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('salary_monthly_basic_performance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.add_column('raw_salary_data_staging', sa.Column('deduct_self_medical_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_raw_salary_data_staging_pay_period_identifier'), table_name='raw_salary_data_staging')
    op.drop_index(op.f('ix_raw_salary_data_staging_id_card_number'), table_name='raw_salary_data_staging')
    op.drop_index(op.f('ix_raw_salary_data_staging_employee_unique_id'), table_name='raw_salary_data_staging')
    op.create_index('raw_salary_data_staging_airbyte_tmp__airbyte_raw_id_idx', 'raw_salary_data_staging', ['_airbyte_raw_id'], unique=False)
    op.create_index('raw_salary_data_staging_airbyte_tmp__airbyte_extracted_at_idx', 'raw_salary_data_staging', ['_airbyte_extracted_at'], unique=False)
    op.alter_column('raw_salary_data_staging', '_airbyte_source_sheet',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', '_airbyte_source_file',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'pay_period_identifier',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('raw_salary_data_staging', 'establishment_type_name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'employee_unique_id',
               existing_type=sa.Text(),
               type_=sa.NUMERIC(precision=38, scale=9),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'employee_name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('raw_salary_data_staging', 'id_card_number',
               existing_type=sa.String(length=18),
               type_=sa.NUMERIC(precision=38, scale=9),
               existing_nullable=True)
    op.drop_column('raw_salary_data_staging', '_import_timestamp')
    op.drop_column('raw_salary_data_staging', '_staging_id')
    op.add_column('employees', sa.Column('establishment_type_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_employees_establishment_type_id', 'employees', 'establishment_types', ['establishment_type_id'], ['id'])
    op.create_table('dim_units',
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('unit_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('salary_field_mappings',
    sa.Column('source_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('target_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_intermediate', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_final', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('source_name', name='pk_salary_field_mappings')
    )
    op.create_table('dim_departments',
    sa.Column('department_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('department_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('dim_establishment_types',
    sa.Column('establishment_type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('establishment_type_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('view_level1_calculations',
    sa.Column('employee_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('pay_period_identifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('establishment_type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('employee_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id_card_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('department_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('establishment_type_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_personnel_identity', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_personnel_rank', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_post_category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_ref_official_post_salary_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_ref_official_salary_step', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_salary_level', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_salary_grade', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_attr_annual_fixed_salary_amount', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_one_time_deduction', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_bonus_deduction', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_deduction', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_incentive_performance_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_position_or_technical_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_rank_or_post_grade_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_reform_1993_reserved_subsidy', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_only_child_parents_reward', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_post_position_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_civil_servant_normative_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_transportation_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_bonus', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_probation_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_petition_worker_post_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_reward_performance_deduction', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_post_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_salary_step', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_monthly_basic_performance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_monthly_reward_performance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_basic_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_performance_salary', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_other_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_salary_backpay', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_quarterly_performance_bonus', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_subsidy', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_petition_post_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_total_deduction_adjustment', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_living_allowance', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_salary_step_backpay_total', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_total_backpay_amount', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_self_pension_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_self_medical_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_self_annuity_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_self_housing_fund_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_self_unemployment_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_individual_income_tax', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_other_deductions', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_social_insurance_adjustment', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_housing_fund_adjustment', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('deduct_tax_adjustment', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_pension_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_medical_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_annuity_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_housing_fund_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_unemployment_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_critical_illness_contribution', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True),
    sa.Column('other_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('calc_xiaoji', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('calc_personal_deductions', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('calc_total_payable', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('calc_net_pay', sa.NUMERIC(), autoincrement=False, nullable=True)
    )
    op.drop_table('staff_monthly_attributes')
    op.drop_table('field_name_mapping')
    op.drop_index('ix_staff_info_id_number', table_name='staff_info')
    op.drop_table('staff_info')
    op.drop_table('salary_field_definitions')
    # ### end Alembic commands ###
