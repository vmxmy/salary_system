"""Create users table

Revision ID: 1f3a30f4b34f
Revises: a23d70659b45
Create Date: 2025-04-18 17:35:44.037884

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1f3a30f4b34f'
down_revision: Union[str, None] = 'a23d70659b45'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_index('raw_salary_data_staging_airbyte_tmp__airbyte_extracted_at_idx', table_name='raw_salary_data_staging')
    op.drop_index('raw_salary_data_staging_airbyte_tmp__airbyte_raw_id_idx', table_name='raw_salary_data_staging')
    op.drop_table('raw_salary_data_staging')
    op.drop_index('ix_units_name', table_name='units')
    op.drop_table('units')
    op.drop_table('salary_records')
    op.drop_index('raw_salary_data_staging_ab_soft_reset__airbyte_extracted_at_idx', table_name='raw_salary_data_staging_ab_soft_reset')
    op.drop_index('raw_salary_data_staging_ab_soft_reset__airbyte_raw_id_idx', table_name='raw_salary_data_staging_ab_soft_reset')
    op.drop_table('raw_salary_data_staging_ab_soft_reset')
    op.drop_table('dim_departments')
    op.drop_index('ix_field_mappings_category', table_name='field_mappings')
    op.drop_table('field_mappings')
    op.drop_table('dim_units')
    op.drop_index('ix_employees_department_id', table_name='employees')
    op.drop_index('ix_employees_employee_unique_id', table_name='employees')
    op.drop_index('ix_employees_employment_status', table_name='employees')
    op.drop_index('ix_employees_id_card_number', table_name='employees')
    op.drop_index('ix_employees_unit_id', table_name='employees')
    op.drop_table('employees')
    op.drop_table('dim_establishment_types')
    op.drop_index('ix_departments_unit_id', table_name='departments')
    op.drop_table('departments')
    op.drop_index('ix_establishment_types_name', table_name='establishment_types')
    op.drop_table('establishment_types')
    op.drop_table('my_first_dbt_model')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('my_first_dbt_model',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('establishment_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='establishment_types_pkey')
    )
    op.create_index('ix_establishment_types_name', 'establishment_types', ['name'], unique=True)
    op.create_table('departments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('departments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('unit_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name='departments_unit_id_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='departments_pkey'),
    sa.UniqueConstraint('unit_id', 'name', name='uq_department_unit_name'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_departments_unit_id', 'departments', ['unit_id'], unique=False)
    op.create_table('dim_establishment_types',
    sa.Column('establishment_type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('establishment_type_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_unique_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('id_card_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bank_account_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bank_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hire_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('employment_status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='employees_department_id_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name='employees_unit_id_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey')
    )
    op.create_index('ix_employees_unit_id', 'employees', ['unit_id'], unique=False)
    op.create_index('ix_employees_id_card_number', 'employees', ['id_card_number'], unique=True)
    op.create_index('ix_employees_employment_status', 'employees', ['employment_status'], unique=False)
    op.create_index('ix_employees_employee_unique_id', 'employees', ['employee_unique_id'], unique=True)
    op.create_index('ix_employees_department_id', 'employees', ['department_id'], unique=False)
    op.create_table('dim_units',
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('unit_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('field_mappings',
    sa.Column('field_code', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('chinese_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('field_code', name='field_mappings_pkey')
    )
    op.create_index('ix_field_mappings_category', 'field_mappings', ['category'], unique=False)
    op.create_table('dim_departments',
    sa.Column('department_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('department_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unit_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('raw_salary_data_staging_ab_soft_reset',
    sa.Column('employee_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('other_remarks', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('id_card_number', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_subsidy', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('employee_unique_id', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_post_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_salary_step', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_basic_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('_airbyte_source_file', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_airbyte_source_sheet', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deduct_tax_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_salary_grade', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_attr_salary_level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pay_period_identifier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_salary_backpay', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_post_category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_other_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_other_deductions', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('establishment_type_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_attr_personnel_rank', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_living_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_probation_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_one_time_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_performance_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_personnel_identity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_total_backpay_amount', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_individual_income_tax', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_housing_fund_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_bonus', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_petition_post_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_post_position_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_transportation_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_annuity_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_medical_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_pension_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_monthly_basic_performance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_only_child_parents_reward', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_rank_or_post_grade_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_salary_step_backpay_total', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_ref_official_salary_step', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_monthly_reward_performance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_total_deduction_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_social_insurance_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_quarterly_performance_bonus', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_annual_fixed_salary_amount', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_position_or_technical_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_reform_1993_reserved_subsidy', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_reward_performance_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_annuity_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_medical_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_pension_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_housing_fund_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_unemployment_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_petition_worker_post_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_ref_official_post_salary_level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_bonus_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_civil_servant_normative_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_housing_fund_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_unemployment_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_critical_illness_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('_airbyte_raw_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('_airbyte_extracted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('_airbyte_generation_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('_airbyte_meta', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False)
    )
    op.create_index('raw_salary_data_staging_ab_soft_reset__airbyte_raw_id_idx', 'raw_salary_data_staging_ab_soft_reset', ['_airbyte_raw_id'], unique=False)
    op.create_index('raw_salary_data_staging_ab_soft_reset__airbyte_extracted_at_idx', 'raw_salary_data_staging_ab_soft_reset', ['_airbyte_extracted_at'], unique=False)
    op.create_table('salary_records',
    sa.Column('employee_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('pay_period_identifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('establishment_type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('job_attributes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('salary_components', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('personal_deductions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('company_contributions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('other_remarks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True)
    )
    op.create_table('units',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='units_pkey')
    )
    op.create_index('ix_units_name', 'units', ['name'], unique=True)
    op.create_table('raw_salary_data_staging',
    sa.Column('employee_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('other_remarks', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('id_card_number', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_subsidy', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('employee_unique_id', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_post_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_salary_step', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_basic_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('_airbyte_source_file', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_airbyte_source_sheet', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deduct_tax_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_salary_grade', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_attr_salary_level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pay_period_identifier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_salary_backpay', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_post_category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_other_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_other_deductions', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('establishment_type_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_attr_personnel_rank', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_living_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_probation_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_one_time_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_performance_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_personnel_identity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_total_backpay_amount', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_individual_income_tax', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_housing_fund_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_bonus', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_petition_post_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_post_position_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_transportation_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_annuity_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_medical_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_pension_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_monthly_basic_performance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_only_child_parents_reward', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_rank_or_post_grade_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_salary_step_backpay_total', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_ref_official_salary_step', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_monthly_reward_performance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_total_deduction_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_social_insurance_adjustment', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_quarterly_performance_bonus', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_annual_fixed_salary_amount', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_position_or_technical_salary', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_reform_1993_reserved_subsidy', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_reward_performance_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_annuity_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_medical_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_pension_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_housing_fund_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('deduct_self_unemployment_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_petition_worker_post_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('job_attr_ref_official_post_salary_level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary_basic_performance_bonus_deduction', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('salary_civil_servant_normative_allowance', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_housing_fund_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_unemployment_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('contrib_employer_critical_illness_contribution', sa.NUMERIC(precision=38, scale=9), autoincrement=False, nullable=True),
    sa.Column('_airbyte_raw_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('_airbyte_extracted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('_airbyte_generation_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('_airbyte_meta', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False)
    )
    op.create_index('raw_salary_data_staging_airbyte_tmp__airbyte_raw_id_idx', 'raw_salary_data_staging', ['_airbyte_raw_id'], unique=False)
    op.create_index('raw_salary_data_staging_airbyte_tmp__airbyte_extracted_at_idx', 'raw_salary_data_staging', ['_airbyte_extracted_at'], unique=False)
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
