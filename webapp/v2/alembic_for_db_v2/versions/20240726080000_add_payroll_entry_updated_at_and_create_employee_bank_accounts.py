"""Add updated_at to payroll.payroll_entries and create hr.employee_bank_accounts table

Revision ID: 20240726080000
Revises: 5fb8e953a477
Create Date: YYYY-MM-DD HH:MM:SS.ssssss

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20240726080000'
down_revision = '5fb8e953a477'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('payroll_entries',
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(timezone=True),
            nullable=True, # As per model definition
            server_default=sa.func.now(),
            onupdate=sa.func.now()
        ),
        schema='payroll'
    )

    op.create_table('employee_bank_accounts',
        sa.Column('id', sa.BigInteger(), sa.Identity(always=True), primary_key=True),
        sa.Column('employee_id', sa.BigInteger(), nullable=False),
        sa.Column('bank_name', sa.String(length=255), nullable=False),
        sa.Column('account_holder_name', sa.String(length=255), nullable=False),
        sa.Column('account_number', sa.String(length=100), nullable=False),
        sa.Column('branch_name', sa.String(length=255), nullable=True),
        sa.Column('bank_code', sa.String(length=50), nullable=True),
        sa.Column('account_type_lookup_value_id', sa.BigInteger(), nullable=True),
        sa.Column('is_primary', sa.Boolean(), nullable=False, server_default=sa.false()),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.func.now(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(['employee_id'], ['hr.employees.id'], name='fk_employee_bank_accounts_employee_id_employees', ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['account_type_lookup_value_id'], ['config.lookup_values.id'], name='fk_employee_bank_accounts_account_type_id', ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('employee_id', 'account_number', name='uq_hr_employee_bank_account_number'),
        schema='hr'
    )
    op.create_index('ix_hr_employee_bank_accounts_employee_id', 'employee_bank_accounts', ['employee_id'], unique=False, schema='hr')
    op.create_index(
        'uq_hr_employee_bank_accounts_employee_id_is_primary',
        'employee_bank_accounts',
        ['employee_id'],
        unique=True,
        schema='hr',
        postgresql_where=sa.text('is_primary IS TRUE')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_hr_employee_bank_accounts_employee_id_is_primary', table_name='employee_bank_accounts', schema='hr', postgresql_where=sa.text('is_primary IS TRUE'))
    op.drop_index('ix_hr_employee_bank_accounts_employee_id', table_name='employee_bank_accounts', schema='hr')
    op.drop_table('employee_bank_accounts', schema='hr')

    op.drop_column('payroll_entries', 'updated_at', schema='payroll')
    # ### end Alembic commands ### 