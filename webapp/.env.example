# Backend Environment Variable Configuration Template (.env.example)
# Copy this file to .env in the same directory (salary_system/webapp/.env)
# and fill in the actual values for your environment.
# Add the actual .env file to your .gitignore to avoid committing secrets.

# --- Database Configuration ---
# PostgreSQL Connection URL
# Format: postgresql://<user>:<password>@<host>:<port>/<database_name>
DATABASE_URL=postgresql://user:password@host:port/database

# 或者使用单独的数据库连接参数
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=salary_system
# DB_USER=postgres
# DB_PASSWORD=password

# --- Flask Application Settings ---

# Flask Secret Key
# IMPORTANT: Generate a strong, random secret key for production!
# Used for session management, security features, etc.
# You can generate one using: python -c 'import secrets; print(secrets.token_hex())'
SECRET_KEY=

# Flask Environment
# Set to 'development' for debugging and auto-reloading during development.
# Set to 'production' for optimized performance and disabled debug mode in production.
FLASK_ENV=development

# --- Application Specific Settings ---

# 数据库初始化设置
# 设置为true时，应用启动时会自动检查并初始化数据库
AUTO_INIT_DB=false

# 管理员账户设置
# 初始管理员账户信息，系统首次启动时会自动创建
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=changeme  # 强烈建议修改为强密码

# JWT认证设置
JWT_SECRET_KEY=  # 用于JWT令牌签名的密钥，建议使用强随机密钥
JWT_ALGORITHM=HS256  # JWT签名算法
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=1440  # 令牌过期时间（分钟）

# 邮件服务器加密密钥
EMAIL_CFG_FERNET_KEY=  # 用于加密邮件服务器密码的Fernet密钥